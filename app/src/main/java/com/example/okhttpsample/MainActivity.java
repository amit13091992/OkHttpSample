package com.example.okhttpsample;import android.annotation.SuppressLint;import android.os.AsyncTask;import android.os.Bundle;import android.support.v7.app.AppCompatActivity;import android.view.View;import android.widget.Button;import android.widget.TextView;import java.io.IOException;import okhttp3.Call;import okhttp3.Callback;import okhttp3.OkHttpClient;import okhttp3.Request;import okhttp3.Response;@SuppressWarnings("NullableProblems")public class MainActivity extends AppCompatActivity {    public String url = "https://reqres.in/api/users/2";    //OkHttpClient client = new OkHttpClient();    TextView txtString;    Button syncCall, asyncCall;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        txtString = (TextView) findViewById(R.id.txtString);        syncCall = (Button) findViewById(R.id.btnsyncCall);        asyncCall = (Button) findViewById(R.id.btnasyncCall);        asyncCall.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                try {                    txtString.setText(" ");                    makeASynchronousCall();                } catch (IOException e) {                    e.printStackTrace();                }            }        });        syncCall.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                txtString.setText(" ");                makeSynchronousCall makeSynchronousCall = new makeSynchronousCall();                makeSynchronousCall.execute(url);            }        });    }    void makeASynchronousCall() throws IOException {        OkHttpClient client = new OkHttpClient();        Request request = new Request.Builder()                .url(url)                .build();        client.newCall(request).enqueue(new Callback() {            @Override            public void onFailure(Call call, IOException e) {                call.cancel();            }            @Override            public void onResponse(Call call, Response response) throws IOException {                assert response.body() != null;                final String myResponse = response.body().string();                MainActivity.this.runOnUiThread(new Runnable() {                    @SuppressLint("SetTextI18n")                    @Override                    public void run() {                        txtString.setText("Synchronous Call response:\n" + myResponse);                    }                });            }        });    }    @SuppressLint("StaticFieldLeak")    public class makeSynchronousCall extends AsyncTask<String, Void, String> {        OkHttpClient client = new OkHttpClient();        @Override        protected String doInBackground(String... params) {            Request.Builder builder = new Request.Builder();            builder.url(params[0]);            Request request = builder.build();            try {                Response response = client.newCall(request).execute();                assert response.body() != null;                return response.body().string();            } catch (Exception e) {                e.printStackTrace();            }            return null;        }        @SuppressLint("SetTextI18n")        @Override        protected void onPostExecute(String s) {            super.onPostExecute(s);            txtString.setText("Synchronous Call response:\n" + s);        }    }}